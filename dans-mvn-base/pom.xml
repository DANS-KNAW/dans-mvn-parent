<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2018 DANS - Data Archiving and Networked Services (info@dans.knaw.nl)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>nl.knaw.dans.shared</groupId>
    <artifactId>dans-mvn-base</artifactId>
    <name>DANS Maven Project Basic Settings</name>
    <version>2.0.0</version>
    <packaging>pom</packaging>
    <scm>
        <developerConnection>scm:git:https://github.com/DANS-KNAW/${project.artifactId}</developerConnection>
        <tag>v2.0.0</tag>
    </scm>
    <description>
        Parent project for all DANS Maven-based projects. It only defines some basic settings and one
        plug-in, namely the JFrog plug-in to publish the module and its descendants to the DANS Maven Repository.
    </description>
    <inceptionYear>2018</inceptionYear>
    <properties>
        <artifactory-maven-plugin.version>2.6.1</artifactory-maven-plugin.version>
        <artifactory-maven-plugin.contextUrl>http://maven-repo.dans.knaw.nl</artifactory-maven-plugin.contextUrl>
        <artifactory-maven-plugin.repoKey>libs-release-local</artifactory-maven-plugin.repoKey>
        <artifactory-maven-plugin.snapshotRepoKey>libs-snapshot-local</artifactory-maven-plugin.snapshotRepoKey>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- wrapped system property maven.build.timestamp in own property as work-around for
         https://issues.apache.org/jira/browse/MRESOURCES-99. This should actually be fixed since
         Maven 3.0.0, so prefer the use of maven.build.timestamp over this custom property.
         -->
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
        <license-maven-plugin.version>3.0</license-maven-plugin.version>

        <!-- Releasing to the DANS Maven repository -->
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    </properties>
    <pluginRepositories>
        <pluginRepository>
            <id>Bintray</id>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <url>http://jcenter.bintray.com</url>
        </pluginRepository>
    </pluginRepositories>
    <build>
        <plugins>
            <!-- Releasing to the DANS Maven repository -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven-release-plugin.version}</version>
                <configuration>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                    <pushChanges>false</pushChanges>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jfrog.buildinfo</groupId>
                <artifactId>artifactory-maven-plugin</artifactId>
                <version>${artifactory-maven-plugin.version}</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>build-info</id>
                        <goals>
                            <goal>publish</goal>
                        </goals>
                        <configuration>
                            <publisher>
                                <contextUrl>${artifactory-maven-plugin.contextUrl}</contextUrl>
                                <username>{{ ARTIFACTORY_USER }}</username>
                                <password>{{ ARTIFACTORY_PW }}</password>
                                <repoKey>${artifactory-maven-plugin.repoKey}</repoKey>
                                <snapshotRepoKey>${artifactory-maven-plugin.snapshotRepoKey}</snapshotRepoKey>
                            </publisher>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--
                    There's a bit of a chicken-and-egg problem here. We cannot use the use the apache2.txt from
                    dans-mvn-build-resources here, as this project depends on dans-mvn-base. To avoid the circular
                    dependency we have a minimal amount of code duplication here. Note that this minimal plug-in
                    configuration is overridden in dans-mvn-build-resources and dans-mvn-plugin-defaults.
                -->
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license-maven-plugin.version}</version>
                <configuration>
                    <header>src/main/resources/apache2.txt</header>
                    <properties>
                        <owner>DANS - Data Archiving and Networked Services</owner>
                        <email>info@dans.knaw.nl</email>
                    </properties>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
